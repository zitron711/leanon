document.addEventListener('DOMContentLoaded', function () {
  // -----------------------------
  // Modal & Dropdown Logic
  // -----------------------------
  const modalTrigger = document.querySelector('.modal-trigger');
  const modal = document.querySelector('.modal');
  const modalClose = document.querySelector('.modal-close');
  const dropdownToggle = document.querySelector('.change-card-toggle');
  const dropdown = document.querySelector('.change-card-dropdown');

  if (modalTrigger && modal && modalClose) {
    modalTrigger.addEventListener('click', () => {
      modal.classList.add('active');
    });

    modalClose.addEventListener('click', () => {
      modal.classList.remove('active');
    });
  }

  if (dropdownToggle && dropdown) {
    dropdownToggle.addEventListener('click', () => {
      dropdown.classList.toggle('active');
    });
  }

  // -----------------------------
  // Reward Calculator Logic
  // -----------------------------
  const inputs = document.querySelectorAll('.spend-input');
  const resultFields = document.querySelectorAll('.result-value');
  const totalField = document.querySelector('.total-value');

  function sanitizeInput(val) {
    return parseFloat(val.replace(/[^0-9.]/g, '')) || 0;
  }

  function formatCurrency(val) {
    return `$${val.toFixed(2)}`;
  }

  function formatInputField(input) {
    const raw = sanitizeInput(input.value);
    if (raw > 0) {
      input.value = `$${raw}`;
    } else {
      input.value = '';
    }
  }

  function calculateRow(input, resultField) {
    const percent = parseFloat(input.dataset.percent);
    const amount = sanitizeInput(input.value);

    if (!isNaN(amount) && amount > 0) {
      const yearlySpend = amount * 12;
      const reward = (percent / 100) * yearlySpend;
      resultField.textContent = formatCurrency(reward);
      return reward;
    } else {
      resultField.textContent = '--';
      return null;
    }
  }

  function updateAll() {
    let total = 0;
    let filled = 0;

    inputs.forEach((input, index) => {
      const reward = calculateRow(input, resultFields[index]);
      if (reward !== null) {
        total += reward;
        filled++;
      }
    });

    if (filled === inputs.length) {
      totalField.textContent = formatCurrency(total);
    } else {
      totalField.textContent = '--';
    }
  }

  if (inputs.length > 0) {
    inputs.forEach(input => {
      input.addEventListener('input', function () {
        const caretPos = input.selectionStart;
        const raw = sanitizeInput(input.value);
        if (!isNaN(raw)) {
          input.value = `$${raw}`;
          input.setSelectionRange(caretPos, caretPos);
        }
        updateAll();
      });

      input.addEventListener('blur', function () {
        formatInputField(input);
        updateAll();
      });
    });
  }
});
