type RewardItem = {
  tier: string;
  reward: string;
  description: string;
};

type RewardMap = {
  [key: string]: RewardItem[];
};

// Simulated JSON response (replace this with `const jsonData = await fetch(...)`)
const jsonData: RewardMap = {
  anshul: [
    { tier: "platinum", reward: "1000 Points", description: "Earn more on every purchase!" },
    { tier: "gold", reward: "500 Points", description: "Moderate rewards." }
  ],
  anshul2: [
    { tier: "silver", reward: "200 Points", description: "Basic rewards." },
    { tier: "bronze", reward: "100 Points", description: "Entry-level rewards." }
  ]
};

function updateRewardsFromJSON(data: RewardMap): void {
  Object.keys(data).forEach(groupKey => {
    const rewardList = data[groupKey];

    rewardList.forEach(rewardItem => {
      const { tier, reward, description } = rewardItem;

      // Update reward value by ID
      const rewardEl = document.getElementById(`donut-reward-${tier}`);
      if (rewardEl) {
        rewardEl.textContent = reward;
      }

      // Optional: update description if available
      const descEl = document.querySelector(`.reward-description-${tier}`);
      if (descEl) {
        descEl.textContent = description;
      }

      // Optional: highlight group
      const groupWrapper = document.querySelector(`[data-reward-group="${groupKey}"]`);
      if (groupWrapper) {
        groupWrapper.classList.add('updated');
      }
    });
  });
}
