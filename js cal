private setupCustomDropdown(): void {
  const customToggle = document.querySelector('.custom-dropdown-toggle') as HTMLElement | null;
  const customDropdown = document.querySelector('.custom-dropdown-list') as HTMLElement | null;
  const customDropdownItems = customDropdown?.querySelectorAll('.custom-dropdown-list-option') ?? [];

  if (!customToggle || !customDropdown) return;

  // Toggle dropdown on click
  customToggle.addEventListener('click', (e) => {
    e.stopPropagation(); // prevent bubbling
    customDropdown.classList.toggle('active');
  });

  // Handle item selection
  customDropdownItems.forEach((item) => {
    item.addEventListener('click', () => {
      const title = item.querySelector('.custom-dropdown-title')?.textContent?.trim();
      const tierName = item.querySelector('.custom-dropdown-tier')?.textContent?.trim();

      if (title) {
        customToggle.textContent = tierName || title;

        customDropdownItems.forEach((i) => i.classList.remove('selected'));
        item.classList.add('selected');

        customDropdown.classList.remove('active');

        // Optional: trigger visual update
        this.redBox();
      }
    });
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!customToggle.contains(e.target as Node) && !customDropdown.contains(e.target as Node)) {
      customDropdown.classList.remove('active');
    }
  });
}


this.setupCustomDropdown(); 


